@model ClssLib.Hoa_Don

@{
    ViewData["Title"] = "Chi Tiết mã hóa đơn ";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
<style>
    .payment-summary {
    background: #ffffff;
    padding: 15px;
    border-radius: 8px;
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
    font-size: 16px;
    }

    .payment-summary p {
    margin: 5px 0;
    font-weight: 500;
    color: #333;
    }

    .payment-summary strong {
    color: #d9534f;
    }

    .total-price {
    border-top: 2px solid #ddd;
    padding-top: 10px;
    margin-top: 10px;
    text-align: left;
    }
    .total-price h4 {
    color: #d9534f;
    font-weight: bold;
    font-size: 22px;
    text-align: right;
    }

    .progress-container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    position: relative;
    margin: 22px 0;

    }

    .progress-bar {
    position: absolute;
    top: 50%;
    left: 0;
    width: 0%;
    height: 5px;
    background-color: #007bff;
    transition: width 0.4s ease-in-out;
    }

    .progress-steps {
    display: flex;
    justify-content: space-between;
    width: 100%;
    }

    .step {
    position: relative;
    padding: 10px 15px;
    background-color: #ccc;
    border-radius: 20px;
    font-size: 14px;
    color: white;
    transition: background-color 0.3s ease;
    }

    .step.active {
    background-color: #28a745;
    }

</style>


<div class="container mt-4">
    <h2>Quản lý đơn hàng / Chi tiết hóa đơn @Model.MaHoaDon</h2>




    @{
        var trangThaiText = "";
        switch (Model.trang_thai)
        {
            case 0: trangThaiText = "Chờ xử lý"; break;
            case 1: trangThaiText = "Đã xác nhận"; break;
            case 2: trangThaiText = "Đang giao hàng"; break;
            case 3: trangThaiText = "Hoàn thành"; break;
            case 4: trangThaiText = "Đã hủy"; break;

            default: trangThaiText = "Không xác định"; break;
        }
    }
    @{
        var loaiHoadon = "";
        switch (Model.loai_hoa_don)
        {

            case 1: loaiHoadon = "Tại quầy"; break;
            case 2: loaiHoadon = "Online"; break;

            default: loaiHoadon = "Không xác định"; break;
        }
    }



    <div class="progress-container">
        <div id="progressBar" class="progress-bar"></div>
        <div class="progress-steps">
            @foreach (var item in ViewBag.TrangThaiList)
            {
                <div class="step @(Model.trang_thai >= int.Parse(item.Value) ? "active" : "")">
                    @item.Text
                </div>
            }
        </div>
    </div>

    <div class="d-flex justify-content-center mt-3">
        <button id="prevBtn" class="btn btn-primary me-2">⬅ Sửa trang thái </button>
        <button id="nextBtn" class="btn btn-primary me-2">Cập nhập trạng thái ➡</button>
        <button class="btn btn-danger btnCancelOrder" data-id="@Model.ID" id="huy">❌ Hủy Đơn</button>


    </div>
    <!-- Nút mở modal -->
    <button type="button" class="btn btn-outline-info" data-bs-toggle="modal" data-bs-target="#modalLichSu">
        <i class="bi bi-clock-history"></i> Lịch sử
    </button>
    <!-- Modal -->
    <div class="modal fade" id="modalLichSu" tabindex="-1" aria-labelledby="modalLichSuLabel" aria-hidden="true">
        <div class="modal-dialog modal-xl modal-dialog-centered">
            <div class="modal-content rounded-4">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalLichSuLabel">Lịch sử trạng thái hóa đơn</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
                </div>
                <div class="modal-body">
                    <table class="table table-bordered table-hover">
                        <thead class="table-primary">
                            <tr>
                                <th>Trạng thái</th>
                                <th>Thời gian</th>
                                <th>Người xác nhận</th>
                                <th>Ghi chú</th>
                            </tr>
                        </thead>
                        <tbody>

                            <tr>
                                <td>@Model.trang_thai</td>
                                <td>@Model.ngay_sua</td>
                                <td>@Model.nguoi_sua</td>
                               
                            </tr>

                        </tbody>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary rounded-pill px-4" data-bs-dismiss="modal">Đóng</button>
                </div>
            </div>
        </div>
    </div>



    <div id="cancelReasonContainer" style="display: none; margin-top: 10px;">
        <input type="text" id="txtCancelReason" class="form-control" placeholder="Nhập lý do hủy đơn..." />
        <button id="btnConfirmCancel" class="btn btn-warning" style="margin-top: 5px;">Xác nhận hủy</button>
    </div>
    <br />
    <div class="row">
        <!-- Cột trái: Thông tin hóa đơn -->
        <div class="col-md-6">
            <div class="card p-3 h-100">
                <h5 class="text-primary">Thông tin hóa đơn @Model.MaHoaDon</h5>
                <p>
                    <strong>Trạng thái:</strong>
                    <span id="statusText" data-status="@Model.trang_thai" class="badge">
                        <!-- Nội dung sẽ được cập nhật bằng JavaScript -->
                    </span>
                </p>
                <p><strong>Loại hóa đơn:</strong> <span class="badge bg-info">@loaiHoadon</span></p>
                <p><strong>Ghi chú:</strong> @Model.ghi_chu</p>
            </div>
        </div>
        <div class="col-md-6" id="viewThongTin">
            <!-- Cột phải: Thông tin khách hàng -->


            <div class="card p-3 h-100">
                <h5 class="text-danger">Thông tin nhận hàng</h5>
                <p><strong>Tên người nhận:</strong> @Model.ten_nguoi_nhan</p>
                <p><strong>SDT người nhận:</strong> @Model.sdt_nguoi_nhan</p>
                <p><strong>Email người nhận:</strong> @Model.email_nguoi_nhan</p>
                <p><strong>Địa chỉ người nhận:</strong> @Model.dia_chi</p>
                @if (Model.trang_thai < 2 || Model.trang_thai == -1)
                {
                    <button class="btn btn-primary" onclick="toggleForm(true)">Sửa</button>
                }
            </div>

        </div>

    </div>
    @if (Model.trang_thai < 2 || Model.trang_thai == -1)
    {
        <div id="formCapNhat" style="display:none">
            @using (Html.BeginForm("CapNhatThongTin", "HoaDon", FormMethod.Post))
            {
                @Html.HiddenFor(m => m.ID)
                <!-- các input cập nhật -->
                <div>
                    <label>Tên người nhận:</label>
                    @Html.TextBoxFor(m => m.ten_nguoi_nhan, new { @class = "form-control" })
                </div>
                <div>
                    <label>SĐT người nhận:</label>
                    @Html.TextBoxFor(m => m.sdt_nguoi_nhan, new { @class = "form-control" })
                </div>
                <div>
                    <label>Email người nhận:</label>
                    @Html.TextBoxFor(m => m.email_nguoi_nhan, new { @class = "form-control" })
                </div>
                <div>
                    <label>Địa chỉ người nhận:</label>
                    @Html.TextBoxFor(m => m.dia_chi, new { @class = "form-control" })
                </div>

                <button type = "submit" class="btn btn-success">Cập nhật</button>
                <button type = "button" class="btn btn-secondary" onclick="toggleForm(false)">Hủy</button>
            }
        </div>
    }





    @* <p>@Model.Tai_Khoan_Hoa_Dons.FirstOrDefault()?.ID - @Model.Tai_Khoan_Hoa_Dons.FirstOrDefault()?.Ten </p> *@
    @*   @foreach (var tk in Model.Tai_Khoan_Hoa_Dons.Select(tkh => tkh.Tai_Khoan))
    {
        <div class="card p-3 mb-4">
            <h5 class="text-danger">Thông tin nhận hàng</h5>
            <p><strong>Tên người nhận:</strong> @tk.ho_ten</p>
            <p><strong>SDT người nhận:</strong> @tk.sdt</p>
            <p><strong>Email người nhận:</strong> @tk.email</p>
            <p><strong>Địa chỉ người nhận:</strong> @tk.Dia_Chi</p>
        </div> *@




    <br />

    <div class="container">
        <h3 class="text-center">Lịch sử thanh toán</h3>
        <table class="table table-bordered">
            <thead>
                <tr>

                    <th>Mã</th>
                    @*  <th>Tên Sản Phẩm</th> *@
                    <th>Số Tiền</th>
                    <th>Số lượng</th>
                    <th>Tên phiếu giảm giá</th>
                    <th>Phương thức thanh toán</th>
                    <th>Tổng tiền</th>
                    <th>Thời Gian</th>


                </tr>
            </thead>
            @*      <tbody>
                <tr>
                    <td>Không có dữ liệu</td>
                </tr>
        </tbody> *@
            <tbody>
                @if (Model.Hoa_Don_Chi_Tiets != null && Model.Hoa_Don_Chi_Tiets.Any())

                {
                    var hoadon = Model.Hoa_Don_Chi_Tiets;

                    @foreach (var item in hoadon)
                    {
                        <tr>
                            <td>@item.ma</td>

                            <td>@item.gia.ToString("#,##0 VNĐ")</td>
                            <td>
                                @item.so_luong
                            </td>
                            <td>
                              @Model.Giam_Gia.ten_phieu_giam_gia
                            </td>
                            <td>
                                @{
                                    foreach (var item1 in Model.Thanh_Toans)
                                    {
                                        string phuongthuc = item1.Phuong_Thuc_Thanh_ToanID switch
                                        {
                                            var id when id == Guid.Parse("F2CE82C6-3373-4EDE-9746-4DA4F9144E08") => "Tiền mặt",
                                            var id when id == Guid.Parse("441B95FF-F542-40F5-AFE6-C721EEAEF0F2") => "Chuyển khoản",
                                            var id when id == Guid.Parse("C8C26B54-1014-47BE-9EA1-4EACE195DC80") => "Cả 2",
                                            var id when id == Guid.Parse("7C3AEF27-EA71-4E64-A72B-1DF815680EB4") => "Thanh toán khi nhận hàng",
                                            var id when id == Guid.Parse("7F90BE50-54DA-4F9F-B6A1-442A095FEA69") => "Thanh toán VnPay",
                                            var id when id == Guid.Parse("80DCCCC8-D392-4805-A4F7-831A7F02529D") => "Thanh toán MoMo",
                                            _ => "Không xác định"
                                        };
                                        <div>@phuongthuc</div>
                                    }
                                }
                            </td>

                            <td >@item.thanh_tien?.ToString("#,##0 VNĐ")</td>
                            <td>@item.ngay_tao.ToString("dd/MM/yyyy HH:mm")</td>
                        </tr>
                    }

            }
            else
            {
                <tr>
                    <td colspan="6" class="text-center text-muted">Không có lịch sử thanh toán nào.</td>
                </tr>
            }
        </tbody>
    </table>
    <br />
      
            <div class="mt-3">

                <button class="btn btn-primary selectProduct" data-id="@Model.ID">+ Thêm sản phẩm</button>


            </div>
      
    <h3 class="text-center">Danh sách sản phẩm</h3>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Mã</th>
                <th>Tên sản phẩm</th>
                <th>Đơn giá</th>
                <th>Số lượng</th>
                <th>Số tiền</th>
                <th>Hành động</th>
                   
            </tr>
        </thead>
       @*      <tbody>
                <tr>
                    <td colspan="6" class="text-center text-muted">Không có dữ liệu</td>
                </tr>
            </tbody> *@
        <tbody>
            @if (Model.Hoa_Don_Chi_Tiets != null && Model.Hoa_Don_Chi_Tiets.Any())
            {
               
                foreach (var item in Model.Hoa_Don_Chi_Tiets)
                {
                    <tr>
                        <td>@item.ma</td>
                      
                      <td>@item.tensp</td> 
                            <td>@item.gia.ToString("#,##0 VNĐ")</td>
                        <td>
                                <div class="input-group quantity mt-4" style="width: 100px;">
                                    <div class="input-group-btn">
                                        <button class="btn btn-sm btn-minus rounded-circle bg-light border updateQuantity"
                                                data-id="@item.ID" data-type="minus">
                                            <i class="fa fa-minus"></i>
                                        </button>
                                    </div>
                                    <input type="text"
                                           class="form-control form-control-sm text-center border-0 product-quantity"
                                           data-id="@item.ID"
                                           value="@item.so_luong">
                                    <div class="input-group-btn">
                                        <button class="btn btn-sm btn-plus rounded-circle bg-light border updateQuantity"
                                                data-id="@item.ID" data-type="plus">
                                            <i class="fa fa-plus"></i>
                                        </button>
                                    </div>
                                </div>
                        </td>
                            <td id="total-@item.ID">@item.thanh_tien?.ToString("#,##0 VNĐ")</td>
                            <td>
                                <a asp-action="RemoveBill" asp-controller="HoaDon" asp-route-id="@item.ID" class="btn btn-md rounded-circle bg-light border mt-4">
                                    <i class="fa fa-times text-danger"></i>
                                </a>
                            </td>
                    </tr>
                   
                }
            }
            else
            {
                <tr>
                    <td colspan="6" class="text-center text-muted">Không có dữ liệu</td>
                </tr>
            }

        </tbody>
           
    </table>

 @*    <div class="row">
        <div class="col-md-6">
            <p><strong>Tổng tiền hàng:</strong> @Model.TongTienHang.ToString("N0") đ</p>
            <p><strong>Phí vận chuyển:</strong> @Model.PhiVanChuyen.ToString("N0") đ</p>
            <p><strong>Mã giảm giá:</strong> @Model.MaGiamGia</p>
        </div>
        <div class="col-md-6 text-right">
            <h4 class="text-danger"><strong>Tổng thanh toán: @Model.TongThanhToan.ToString("N0") đ</strong></h4>
        </div>
    </div> *@
</div>

    @{
        var tongTienHang = Model.tong_tien;
        var phiShip = Model.Ship ?? 0; // Nếu Ship là null thì gán 0
        var tongCong = tongTienHang + phiShip;
    }
<br />
    <div class="row payment-summary">
        <div class="col-md-6">
            <p><strong>Tổng tiền hàng:</strong> @Model.tong_tien.ToString("#,##0 VNĐ")</p>
            <p><strong>Phí vận chuyển:</strong> @(Model.Ship != null
                ? Model.Ship.Value.ToString("#,##0 VNĐ")
                : "0 VNĐ")
            </p>
            <p>
                <strong>Mã giảm giá:</strong> @(Model.Giam_Gia != null
                ? $"{Model.Giam_Gia.ten_phieu_giam_gia}"
                : "Không áp dụng")
            </p>
        </div>
        <div class="col-md-6 text-right total-price" >
            <h4>
                <strong>Tổng thanh toán:@tongCong.ToString("#,##0 VNĐ")</strong>
            </h4>
        </div>
    </div>



    <!-- Bảng hiển thị lịch sử thanh toán sẽ thêm vào đây -->
</div>
@section Scripts
{
    
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


        <script>
                    
            
            let currentStep = @Model.trang_thai ;
        const steps = document.querySelectorAll(".step");
        const progressBar = document.getElementById("progressBar");
        const statusTextElement = document.getElementById("statusText");
        const nextBtn = document.getElementById("nextBtn");
        const prevBtn = document.getElementById("prevBtn");

        let historyLog = [];
                const statusText = [
          
            "Chờ xử lý",
            "Đã xác nhận",
            "Đang giao hàng",
            "Hoàn thành",
            "Đã hủy",
            "Đã Thanh Toán",
            "Chưa Thanh Toán",
        ];

            function updateProgress() {
                steps.forEach((step, index) => {
                    step.classList.toggle("active", index <= currentStep);
                });
                progressBar.style.width = `${(currentStep / (steps.length - 1)) * 100}%`;

                 statusTextElement.innerText = statusText[currentStep];

                      statusTextElement.className = "badge";
        const colors = ["bg-secondary", "bg-primary", "bg-warning", "bg-success","bg-warning","bg-success","bg-danger" ];
        statusTextElement.classList.add(colors[currentStep]);
         if (currentStep === 4) {
            nextBtn.style.display = "none";
            prevBtn.style.display = "none";
            huy.style.display="none";
            

        }else if(currentStep === 3){
            nextBtn.style.display = "none";
            prevBtn.style.display = "none";
            huy.style.display="none";
            statusText = [
            "Chờ xử lý",
            "Đã xác nhận",
            "Đang giao hàng",
            "Hoàn thành",
           

        ];

        }else if (currentStep === 2){
            prevBtn.style.display ="none";
            huy.style.display ="none"
        }else if(currentStep === -1 && currentStep===-2 )
        {
              nextBtn.style.display = "none";
            prevBtn.style.display = "none";
             huy.style.display ="none"
        }
        else {
            nextBtn.style.display = "inline-block";
            prevBtn.style.display = "inline-block";
        }
            }

                    function promptReason(callback) {
            Swal.fire({
                title: "Nhập lý do thay đổi trạng thái",
                input: "text",
                inputPlaceholder: "Nhập lý do...",
                showCancelButton: true,
                confirmButtonText: "Xác nhận",
                cancelButtonText: "Hủy"
            }).then((result) => {
                if (result.isConfirmed && result.value.trim() !== "") {
                    callback(result.value);
                } else if (result.isConfirmed) {
                    Swal.fire("Lỗi", "Vui lòng nhập lý do!", "error");
                }
            });
        }


        
            function updateStatus(newStatus , reason) {

                $.ajax({
                    url: '@Url.Action("UpdateStatus", "HoaDon")',
                    type: 'POST',
                    data: { id: '@Model.ID', newStatus: newStatus , reason: reason },
                    success: function (response) {
                        if (response.success) {
                            currentStep = response.status;
                           location.reload();
                            updateProgress();
                        }else {
                            alert("Cập nhật trạng thái thất bại!");
                        }
                    },
                    error: function () {
                        alert("Có lỗi xảy ra khi cập nhật trạng thái!");
                    }
                });
            }

                    nextBtn.addEventListener("click", () => {
            if (currentStep < steps.length - 1) {
                promptReason((reason) => {
                    currentStep++;
                    updateStatus(currentStep, reason);
                });
            }
        });

        prevBtn.addEventListener("click", () => {
            if (currentStep > 0) {
                promptReason((reason) => {
                    currentStep--;
                    updateStatus(currentStep, reason);
                });
            }
        });
   


            updateProgress();

             $(document).ready(function () {
            $(".btnCancelOrder").click(function () {
                var orderId = $(this).data("id");

           


                Swal.fire({
                    title: "Bạn có chắc chắn muốn hủy đơn hàng?",
                    text: "Sau khi hủy, không thể hoàn tác!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#d33",
                    cancelButtonColor: "#3085d6",
                    confirmButtonText: "Có, hủy ngay!",
                    cancelButtonText: "Không"
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '@Url.Action("HuyDonHang", "HoaDon")',
                            type: "POST",
                            data: { id: orderId },
                            success: function (response) {
                                if (response.success) {

                                    Swal.fire("Đã hủy!", "Đơn hàng đã được hủy.", "success")
                                        .then(() => location.reload());
                                } else {
                                    Swal.fire("Lỗi!", response.message, "error");
                                }
                            },
                            error: function () {
                                Swal.fire("Lỗi!", "Không thể hủy đơn hàng.", "error");
                            }
                        });
                    }
                });
            });

         
           
  
    


        });

                       $(".updateQuantity").click(function () {
            var button = $(this);
            var productId = button.data("id");
            var type = button.data("type");
            var input = $(`.product-quantity[data-id='${productId}']`);
            var currentQuantity = parseInt(input.val());

            // Thay đổi số lượng theo nút nhấn
            if (type === "plus") {
                currentQuantity++;
            } else if (type === "minus" && currentQuantity > 1) {
                currentQuantity--;
            }

            input.val(currentQuantity);

            $.ajax({
                 url: '@Url.Action("UpdateQuantity", "HoaDon")',
                type: "POST",
                data: { id: productId, quantity: currentQuantity },
                success: function (response) {
                    if (response.success) {
                        var newTotal = response.newTotal;
                        $(`#total-${productId}`).text(newTotal.toLocaleString() + " VNĐ");

                        $("#totalCart").text(response.totalCart.toLocaleString() + " VNĐ");
                         location.reload(); 
                    } else {
                        alert("Lỗi: " + response.message);
                    }
                },
                error: function () {
                    alert("Có lỗi xảy ra!");
                }
            });
        });

               function toggleForm(show) {
                   
            document.getElementById("formCapNhat").style.display = show ? "block" : "none";
            document.getElementById("viewThongTin").style.display = show ? "none" : "block";
        }



        
            
        </script>
   }